---
import {AstroFont} from 'astro-font';
import Footer from '../components/Footer.astro';
import HeroSection from '../components/HeroSection.astro';
import Stats from '../components/Stats.astro';
import Features from '../components/Features.astro';
import Posti from '../components/Posti.astro';
import Header from '../components/Header.astro';
import Carousel from '../components/Carousel.astro';
import BeforeAfter from '../components/BeforeAfter.astro';
import "../styles/global.css";
---

<!doctype html>
<html lang="it">
<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <title>Tap System - Sostituzione Tapparelle Milano | Riparazione Tapparelle Elettriche e Assistenza</title>
    <meta name="description"
          content="Tap System a Milano offre riparazione tapparelle elettriche e sostituzione tapparelle. Servizio rapido e professionale di assistenza tapparellista a Milano.">
    <meta name="keywords"
          content="Riparazione Tapparelle elettriche Milano, Tapparelista Milano, Sostituzione tapparelle Milano, Riparazione tapparelle Milano, Riparazione e sostituzione tapparelle Milano, Assistenza e sostituzione tapparelle Milano">
    <meta name="robots" content="index, follow">
    <meta name="author" content="code22.servehttp.com">
    <meta http-equiv="Content-Language" content="it">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="UTF-8">
    <meta name="google-site-verification" content="I5ps1vJtRD6Gfo4Un1c1lEVhLfiRB7cp8mJqCvRlYTQ"/>

    <AstroFont
            config={[
                {
                    src: [],
                    name: "Urbanist",
                    preload: true,
                    display: "swap",
                    selector: "html",
                    fallback: "sans-serif",
                    googleFontsURL: 'https://fonts.googleapis.com/css2?family=Urbanist:wght@400;500;600;700&display=swap',
                },
            ]}
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cookieconsent@3/build/cookieconsent.min.css"/>
</head>
<body class="bg-white dark:bg-gray-900">
<Header/>
<main class="space-y-30 mb-20">
    <HeroSection/>
    <Carousel/>
    <BeforeAfter/>
    <Features/>
    <Stats/>
    <Posti/>
    <script src="https://cdn.jsdelivr.net/npm/cookieconsent@3/build/cookieconsent.min.js"></script>
</main>
<Footer/>
</body>
</html>

<script>
    window.addEventListener("load", function () {
        window.cookieconsent.initialise({
            palette: {
                popup: {background: "#000"},
                button: {background: "#0033f0"}
            },
            theme: "classic",
            position: "bottom-right",
            type: "opt-in", // richiede consenso esplicito
            revokable: false, // disattiva l'icona per modificare il consenso
            content: {
                message: "Questo sito utilizza i cookie per migliorare l'esperienza.",
                allow: "Accetta",
                deny: "Rifiuta",
                link: "Leggi di più",
                href: "/privacy-policy"
            },
            showLink: true,
            elements: {
                allow: '<button aria-label="consenti" class="cc-btn cc-allow">{{allow}}</button>',
                deny: '<button aria-label="rifiuta" class="cc-btn cc-deny">{{deny}}</button>'
            },
            onInitialise: function (status) {
                const didConsent = this.hasConsented();
                if (didConsent) {
                    console.log("Cookies accettati");
                    loadGoogleAnalytics(); // Carica Google Analytics se i cookie sono accettati
                } else {
                    console.log("Cookies rifiutati");
                    alert("Alcune funzionalità potrebbero non essere disponibili senza il consenso dei cookie.");
                    // Non caricare script non essenziali, come Google Analytics
                }
            },
            onStatusChange: function (status, chosenBefore) {
                const didConsent = this.hasConsented();
                if (didConsent) {
                    console.log("Consenso dato");
                    loadGoogleAnalytics(); // Carica Google Analytics se il consenso viene dato in un secondo momento
                } else {
                    console.log("Consenso negato");
                }
            }
        });
    });

    // Funzione per caricare Google Analytics
    function loadGoogleAnalytics() {
        const script = document.createElement('script');
        script.src = "https://www.googletagmanager.com/gtag/js?id=UA-XXXXXXXXX-X";
        script.onload = () => {
            window.dataLayer = window.dataLayer || [];
            window.gtag = function () {
                dataLayer.push(arguments);
            };
            gtag('js', new Date());
            gtag('config', 'UA-XXXXXXXXX-X');
        };
        document.head.appendChild(script);
    }
</script>
